@model Imdb.Web.ViewModels.Admin.Administration.AddActorsAndGenresViewModel
@{
    ViewData["Title"] = "Add actors and genres";
    var availableGenres = Model.AvailableGenres.Select(x => new SelectListItem(x.Name, x.Id.ToString()));
    var availableActors = Model.AvailableActors.Select(x => new SelectListItem(x.Name, x.Id));
}

<h1>@ViewData["Title"]</h1>

<div class="text-center">
    <h2>@Model.Title</h2>
</div>
<hr />
<div class="row">
    Genres :
    <ul id="genres">
        @foreach (var genre in Model.Genres)
        {
            <li id="@genre.Id">@genre.GenreName <a href="#" onclick="deleteGenreById('@genre.Id')"><i class="fas fa-user-times"></i></a></li>
        }
    </ul>
</div>
<form id="votesForm" method="post"></form>
<hr />
<div class="row">
    <div class="col-12 col-md-6">
        <select id="chosenGenre" asp-items="@availableGenres" class="form-control"></select>
    </div>
    <div>
        <a class="btn btn-primary my-3" href="#" onclick="addGenre('@Model.Id')">Add genre</a>
    </div>
</div>
<hr />
<div class="row">
    Actors :
    <ul id="actors">
        @foreach (var actor in Model.Actors)
        {
            <li id="@actor.Id">@actor.Name <a href="#" onclick="deleteByActorId('@actor.Id')"><i class="fas fa-user-times"></i></a></li>
        }
    </ul>
</div>
<hr />
<div class="row">
    <div class="col-12 col-md-6">
        <select id="chosenActor" asp-items="@availableActors" class="form-control"></select>
    </div>
    <div>
        <a class="btn btn-primary my-3" href="#" onclick="addActor('@Model.Id')">Add actor</a>
    </div>
</div>
<hr />
<a class="btn btn-success" asp-area="" asp-controller="Movies" asp-action="ById" asp-route-id="@Model.Id">Done</a>

@section Scripts {
    <script>
        function addGenre(movieId) {
            var genreId = $("#chosenGenre").val();
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = { movieId: movieId, genreId: parseInt(genreId) };
            $.ajax({
                url: "/api/genres",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    console.log(data.genreName);
                    var item = document.createElement("li");
                    var node = document.createTextNode(data.genreName);
                    item.appendChild(node);
                    var element = document.getElementById("genres");
                    element.appendChild(item);
                }
            });
        }

        function deleteByActorId(id) {
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = { id: parseInt(id) };
            $.ajax({
                url: "/api/addActors",
                type: "DELETE",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $(`#${data.id}`).remove();
                }
            });
        }
        function addActor(movieId) {
            var actorId = $("#chosenActor").val();
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            console.log(token);
            var json = { movieId: movieId, actorId: actorId };
            $.ajax({
                url: "/api/addActors",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    var item = document.createElement("li");
                    var node = document.createTextNode(data.name);
                    item.appendChild(node);
                    var element = document.getElementById("actors");
                    element.appendChild(item);
                }
            });
        }

        function deleteGenreById(id) {
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = { id: parseInt(id)};
            $.ajax({
                url: "/api/genres",
                type: "DELETE",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $(`#${data.id}`).remove();
                }
            });
        }
    </script>
}