@model Imdb.Web.ViewModels.Movies.MovieInfoViewModel
@{
    ViewData["Title"] = "ById";
    var releaseDate = string.Empty;

    if (!Model.ReleaseDate.HasValue)
    {
        releaseDate = "Not announced";
    }
    else
    {
        releaseDate = Model.ReleaseDate.Value.Date.ToShortDateString();
    }

    var votes = Model.PossibleVotes.Select(x => new SelectListItem(x.ToString(), x.ToString()));
}
<div class="text-center">
    <div class="row">
        <div class="col-12 col-md-4">
            <img src="@(GlobalConstants.BaseDeliveryUrl+Model.GeneralImageUrl)" width="100%" height="315" />
        </div>
        <div class="col-12 col-md-2">
            
        </div>
        <div class="col-12 col-md-6">
            <iframe width="560" height="315" src="@Model.Trailer" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
    </div>

    <h1 class="text-center">@Model.Title</h1>
    <p class="small">@Model.LanguageName | @releaseDate | @Model.Duration </p>
    <p class="small">Gross: @Model.Gross | Budget: @Model.Budget </p>

    <label class="font-weight-bold" asp-for="@Model.Description"></label>
    <div class="text-info">@Model.Description</div>

    <label class="font-weight-bold" asp-for="@Model.DirectorName"></label>
    <div class="form-group">@Model.DirectorName</div>

    @*
        public string DirectorId { get; set; }

        [Display(Name = "Director's name")]
        public string DirectorName { get; set; }

        [Display(Name = "Image")]
        public string GeneralImageUrl { get; set; }

        public double? Rating { get; set; }

        public virtual IEnumerable<MovieGenreInfoViewModel>
            Genres { get; set; }

            public virtual IEnumerable<MovieActorInfoViewModel>
                Actors { get; set; }

                public virtual IEnumerable<MovieReviewViewModel> Reviews { get; set; }*@
</div>

